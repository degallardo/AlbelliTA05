@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-3.5.0.js")"></script>
    <script type="text/javascript">

    function AppViewModel() {
        var self = this;
        self.loggedIn = true; @*@(Request.IsAuthenticated ? "true" : "false");*@

        self.products = ko.observableArray();
        self.cart = ko.observableArray();
        self.orders = ko.observableArray();
        self.details = ko.observable();
        self.errorMessage = ko.observable(null);

        function ProductViewModel(root, product) {
            var self = this;
            self.ProductId = product.Id;
            self.Name = product.Name;
            self.Width = product.Width;
            self.MaxStack = product.MaxStack;
            self.Quantity = ko.observable(0);

            self.addItemToCart = function () {
                var qty = self.Quantity();
                if (qty == 0) {
                    root.cart.push(self);
                }
                self.Quantity(qty + 1);
            };

            self.removeAllFromCart = function () {
                self.Quantity(0);
                root.cart.remove(self);
            };
        }
            function OrderDetailsViewModel(order) {
                var self = this;
                self.items = ko.observableArray();
                self.Id = order.Id;

                self.total = ko.computed(function () {
                    var sum = 0;
                    $.each(self.items(), function (index, item) {
                        sum += item.Width * Math.ceil(item.Quantity / item.MaxStack); // ceil funtion will round Quantity/MaxStack upward to its nearest integer
                    });
                    return sum.toFixed(1);
                });

                $.getJSON("/api/orders/" + order.Id, function (order) {
                    $.each(order.Details, function (index, item) {
                        self.items.push(item);
                    })
                });
            };

            function CalculateStackWidth(quantity, maxStack) {

            }

            self.resetCart = function () {
                var items = self.cart.removeAll();
                $.each(items, function (index, product) {
                    product.Quantity(0);
                });
            }

            self.getDetails = function (order) {
                self.details(new OrderDetailsViewModel(order));
            }

            self.createOrder = function () {
                var jqxhr = $.ajax({
                    type: 'POST',
                    url: "api/orders",
                    contentType: 'application/json; charset=utf-8',
                    data: ko.toJSON({ Details: self.cart }),
                    dataType: "json",
                    success: function (newOrder) {
                        self.errorMessage(null);
                        self.resetCart();
                        self.orders.push(newOrder);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        self.errorMessage(errorThrown);
                    }
                });
            }

            // Initialize the view-model
            $.getJSON("/api/products", function (products) {
                $.each(products, function (index, product) {
                    self.products.push(new ProductViewModel(self, product));
                })
            });

            $.getJSON("api/orders", self.orders);

        }

    }

    $(document).ready(function () {
        ko.applyBindings(new AppViewModel());
    });

    </script>
}

<div class="col-md-4">
    <!-- List of products -->
    <div class="float-left">
        <h3>Products</h3>
        <ul id="products" data-bind="foreach: products">
            <li>
                <div>
                    <span data-bind="text: Name"></span>
                    <span data-bind="text: Width + 'mm'"></span>
                </div>
                <div>
                    <button data-bind="click: addItemToCart">Add to Order</button>
                </div>
            </li>
        </ul>
    </div>

    <!-- Cart -->
    <div id="cart" class="col-md-4">
        <h3>Your Cart</h3>
        <table class="details ui-widget-content"></table>
        <input type="button" value="Create Order" />
    </div>
</div>

<div id="orders-area" class="col-md-4">
    <!-- List of orders -->
    <div class="float-left">
        <h3>Your Orders</h3>
        <ul id="orders"></ul>
    </div>

    <!-- Order Details -->
    <div id="order-details" class="col-md-4">
        <h3>Order #<span></span></h3>
        <table class="details ui-widget-content"></table>
        <p>Total: <span></span></p>
    </div>
</div>